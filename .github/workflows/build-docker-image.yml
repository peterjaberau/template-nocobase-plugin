name: Build Docker Image

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - "main"
      - "next"
  pull_request:
    branches:
      - "**"
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    services:
      verdaccio:
        image: verdaccio/verdaccio:latest
        ports:
          - 4873:4873
    steps:
      - name: Get plugin name
        id: plugin-name
        run: |
          PLUGIN_NAME=$(echo ${{ github.event.repository.name }} | sed "s/plugin-//")
          echo "pluginName=$PLUGIN_NAME" >> $GITHUB_OUTPUT
      - name: Checkout nocobase/nocobase
        uses: actions/checkout@v4
        with:
          repository: nocobase/nocobase
          ref: main
          fetch-depth: 0
      - name: git checkout ${{ github.event.pull_request.base.ref }}
        run: git checkout ${{ github.event.pull_request.base.ref }}
        continue-on-error: true
      - name: git checkout ${{ github.head_ref || github.ref_name }}
        run: git checkout ${{ github.head_ref || github.ref_name }}
        continue-on-error: true
      - name: Checkout plugin
        uses: actions/checkout@v3
        with:
          path: packages/pro-plugins/@nocobase/${{ github.event.repository.name }}
      - name: rm .git
        run: rm -rf packages/pro-plugins/@nocobase/${{ github.event.repository.name }}/.git &&  git config --global user.email "you@example.com"  &&  git config --global user.name "Your Name" && git add -A && git commit -m "tmp commit"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: network=host
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            nocobase/nocobase
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - name: Login to Aliyun Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.ALI_DOCKER_REGISTRY }}
          username: ${{ secrets.ALI_DOCKER_USERNAME }}
          password: ${{ secrets.ALI_DOCKER_PASSWORD }}
      - name: Set tags
        id: set-tags
        run: |
          echo "::set-output name=tags::${{ secrets.ALI_DOCKER_REGISTRY }}/${{ steps.meta.outputs.tags }}-${{ steps.plugin-name.outputs.pluginName }}"
      - name: IMAGE_TAG
        env:
          IMAGE_TAG: ${{ steps.meta.outputs.tags }}
        run: |
          echo $IMAGE_TAG
      - name: Set variables
        run: |
          target_directory="./packages/pro-plugins/@nocobase"
          subdirectories=$(find "$target_directory" -mindepth 1 -maxdepth 1 -type d -exec basename {} \; | tr '\n' ' ')
          trimmed_variable=$(echo "$subdirectories" | xargs)
          packageNames="@nocobase/${trimmed_variable// / @nocobase/}"
          pluginNames="${trimmed_variable//plugin-/}"
          BEFORE_PACK_NOCOBASE="yarn add $packageNames -W"
          APPEND_PRESET_LOCAL_PLUGINS="${pluginNames// /,}"
          echo "var1=$BEFORE_PACK_NOCOBASE" >> $GITHUB_OUTPUT
          echo "var2=$APPEND_PRESET_LOCAL_PLUGINS" >> $GITHUB_OUTPUT
        id: vars
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          build-args: |
            VERDACCIO_URL=http://localhost:4873/
            COMMIT_HASH=${GITHUB_SHA}
            PLUGINS_DIRS=pro-plugins
            BEFORE_PACK_NOCOBASE=${{ steps.vars.outputs.var1 }}
            APPEND_PRESET_LOCAL_PLUGINS=${{ steps.vars.outputs.var2 }}
          push: true
          tags: ${{ steps.set-tags.outputs.tags }}
      - name: Deploy NocoBase
        env:
          IMAGE_TAG: ${{ steps.meta.outputs.tags }}
        run: |
          echo $IMAGE_TAG
          export APP_NAME=$(echo $IMAGE_TAG | cut -d ":" -f 2)-${{ steps.plugin-name.outputs.pluginName }}
          echo $APP_NAME
          curl --retry 2 --location --request POST "${{secrets.NOCOBASE_DEPLOY_HOST}}$APP_NAME" \
            --header 'Content-Type: application/json' \
            -d "{
                \"tag\": \"$APP_NAME\",
                \"dialect\": \"postgres\"
            }"
